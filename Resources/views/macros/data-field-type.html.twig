{% trans_default_domain 'EMSCoreBundle' %}

{%  macro renderDataField(dataField) %}
{% import _self as macros %}
	{{ macros|macro_fct(dataField.fieldType.type|replace({'\\': '_'}), dataField) }}
	{{ macros.messages(dataField) }}
{% endmacro %}


{%  macro messages(dataField) %}
	{% if dataField.messages|length > 0 %}
		<div class="callout callout-warning">
			{% if dataField.messages|length == 1 %}
	    		<p>{{ dataField.messages.0 }}</p>
	    	{% else %}
	    		<ul>
	    		{% for message in dataField.messages %}
	    			<li>{{ message }}</li>
	    		{% endfor %}
	    		</ul>
	    	{% endif %}
		</div>
	{% endif %}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_CopyToFieldType(dataField) %}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_UrlAttachmentFieldType(dataField) %}
	<div class="panel-heading">
		<h3 class="panel-title">
			<i class="{% if dataField.fieldType.displayOptions.icon is defined %}{{ dataField.fieldType.displayOptions.icon }}{% else %}fa fa-file-o{% endif %}"></i> 				
				{% if dataField.fieldType.displayOptions.label is defined %}
					{{ dataField.fieldType.displayOptions.label }}
				{% else %}
					{{ dataField.fieldType.name }}
				{% endif %}
		</h3>
	</div>
	<div class="panel-body" >
		{% if dataField.rawData and dataField.rawData._url is defined %}
			<ul>
				{% if dataField.rawData._url %}
    				<li><a href="{{ dataField.rawData._url }}" target="_blank">URL: {{ dataField.rawData._url }}</a></li>
    				{% if dataField.rawData._size is defined %}
    					<li>Size: {{ dataField.rawData._size }}</li>
    				{% endif %}
    			{% else %}
    				<li>{{ 'Not defined'|trans }}</li>
    			{% endif %}
			</ul>
		{% endif %}
		
	</div>
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_FileAttachmentFieldType(dataField) %}
{% import _self as macros %}
	{{ macros.EMS_CoreBundle_Form_DataField_AssetFieldType(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_IndexedAssetFieldType(dataField) %}
{% import _self as macros %}
	{{ macros.EMS_CoreBundle_Form_DataField_AssetFieldType(dataField) }}
{% endmacro %}


{% macro EMS_CoreBundle_Form_DataField_AssetFieldType(dataField) %}
<div class="panel panel-default">
	<div class="panel-heading">
		<h3 class="panel-title">
			<i class="{% if dataField.fieldType.displayOptions.icon is defined %}{{ dataField.fieldType.displayOptions.icon }}{% else %}fa fa-file-o{% endif %}"></i> 				
				{% if dataField.fieldType.displayOptions.label is defined %}
					{{ dataField.fieldType.displayOptions.label }}
				{% else %}
					{{ dataField.fieldType.name }}
				{% endif %}
		</h3>
	</div>
	<div class="panel-body" >
		{% if dataField.rawData and dataField.rawData.sha1 is defined %}
			{% if dataField.rawData.sha1 and dataField.rawData.mimetype starts with 'image/' %}
				{% set path = path('ems.file.view', {'sha1':dataField.rawData.sha1, 'type':dataField.rawData.mimetype, 'name':dataField.rawData.filename }) %}
				{% if dataField.fieldType.displayOptions.imageAssetConfigIdentifier is defined and dataField.fieldType.displayOptions.imageAssetConfigIdentifier %}
				    {% set path = path('ems_asset_processor', {'hash':dataField.rawData.sha1, 'processor': dataField.fieldType.displayOptions.imageAssetConfigIdentifier, 'type':dataField.rawData.mimetype, 'name':dataField.rawData.filename }) %}
				{% endif %}
				<img src="{{ path }}" class="img-responsive" alt="Image of the field {{ dataField.fieldType.name }}">
			{% else %}
                  	<strong>
                  		{{ dataField.rawData.filename }}
                  	</strong>
			{% endif %}
		{% endif %}
		
	</div>
	{% if dataField.rawData and dataField.rawData.sha1 is defined and dataField.rawData.sha1 %}
	    {% set tempId = dataField.fieldType.name~'_'~random() %}
		<div class="panel-footer" >
			<div class="btn-group">
    			<button type="button" class="btn btn-small btn-primary asset-details" data-toggle="modal" data-target="#indexed-details-revision_{{ tempId }}">
                	<i class="fa fa-info"></i>
                    {{ 'Info'|trans }}
                </button>
				<a href="{{ path('file.download', {'sha1':dataField.rawData.sha1, 'type':dataField.rawData.mimetype, 'name':dataField.rawData.filename }) }}" class="btn btn-small btn-primary"><i class="fa fa-download"></i>&nbsp;{{'Download'|trans}}</a>
				<a href="{{ path('ems.file.view', {'sha1':dataField.rawData.sha1, 'type':dataField.rawData.mimetype, 'name':dataField.rawData.filename }) }}" class="btn btn-small btn-primary"><i class="fa fa-eye"></i>&nbsp;{{'View'|trans}}</a>
			</div>
			<div class="modal" tabindex="-1" role="dialog" id="indexed-details-revision_{{ tempId }}">
              <div class="modal-dialog" role="document">
                <div class="modal-content">
                  <div class="modal-header">
                  	<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">Ã—</span></button>
            		<h4 class="modal-title" id="myModalLabel">{{ 'Asset details' }}</h4>
                  </div>
                  <div class="modal-body raw-view">
                  	<ul class="list-group">
                      	<li class="list-group-item leaf-item">
                      		<strong>{{ 'Hash signature'|trans }}</strong>
                      		{{ dataField.rawData.sha1 }}
                      	</li>
    					{% if dataField.rawData._title is defined %}
                          	<li class="list-group-item leaf-item">
                          		<strong>{{ 'Title : '|trans }}</strong>
                          		{{ dataField.rawData._title }}
                          	</li>
    					{% endif %}
    					{% if dataField.rawData.filesize is defined %}
                          	<li class="list-group-item leaf-item">
                          		<strong>{{ 'Size : '|trans }}</strong>
                          		{{ dataField.rawData.filesize|number_format(0, ',', '.') }} bytes
                          	</li>
    					{% endif %}
                      	<li class="list-group-item leaf-item">
                      		<strong>{{ 'MIME Type : '|trans }}</strong>
                      		{{ dataField.rawData.mimetype }}
                      	</li>
    					{% if dataField.rawData._date is defined %}
                          	<li class="list-group-item leaf-item">
                          		<strong>{{ 'Date : '|trans }}</strong>
                          		{{ dataField.rawData._date }}
                          	</li>
    					{% endif %}
    					{% if dataField.rawData._author is defined %}
                          	<li class="list-group-item leaf-item">
                          		<strong>{{ 'Author : '|trans }}</strong>
                          		{{ dataField.rawData._author }}
                          	</li>
    					{% endif %}
    					{% if dataField.rawData._language is defined %}
                          	<li class="list-group-item leaf-item">
                          		<strong>{{ 'Language : '|trans }}</strong>
                          		{{ dataField.rawData._language }}
                          	</li>
    					{% endif %}
    					{% if dataField.rawData._content is defined %}
                          	<li class="list-group-item leaf-item">
                          		<strong>{{ 'Content : '|trans }}</strong><br>
                          		{{ dataField.rawData._content|nl2br }}
                          	</li>
    					{% endif %}
                  	</ul>
                  	<div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                  </div>
                </div>
              </div>
            </div>
            </div>
		</div>
	{% endif %}
</div>
{% endmacro %}


{% macro EMS_CoreBundle_Form_DataField_CollectionFieldType(dataField) %}
{% import _self as macros %}
{% set collapsible = dataField.fieldType.displayOptions.collapsible|default(false) %}

	<div class="panel panel-default {% if collapsible %}collapsible-collection{% endif %}">
		<div class="panel-heading">
			<h3 class="panel-title">
				{% if dataField.fieldType.displayOptions.icon is defined %}
					<i class="{{ dataField.fieldType.displayOptions.icon }}"></i> 
				{% endif %}
				{% if dataField.fieldType.displayOptions.label is defined %}
					{{ dataField.fieldType.displayOptions.label }}
				{% else %}
				{% endif %}
				({{ dataField.fieldType.name }})
				{% if collapsible %}
                    <div class="pull-right">
                        <div class="btn-group toggle-group" role="group">
                            <button type="button" title="collapse" aria-expanded="false" class="btn btn-sm button-collapse"></button>
                            <button type="button" title="collapse all" aria-expanded="false" class="btn btn-sm button-collapse-all"></button>
                        </div>
                    </div>
                    <div class="clearfix"></div>
				{% endif %}
			</h3>
		</div>
		<div class="panel-body {% if collapsible %}collapse{% endif %}">
			{% for child in dataField.children %}
				<div class="{% if dataField.fieldType.displayOptions.itemBootstrapClass is defined and dataField.fieldType.displayOptions.itemBootstrapClass %}{{ dataField.fieldType.displayOptions.itemBootstrapClass }}{% else %}col-md-12{% endif %}">
					<div class="panel panel-default">
						<div class="panel-heading">
							<h3 class="panel-title">
								{% if dataField.fieldType.displayOptions.icon is defined %}
									<i class="{{ dataField.fieldType.displayOptions.icon }}"></i> 
								{% endif %}
								{% if dataField.fieldType.displayOptions.singularLabel is defined %}
									{{ dataField.fieldType.displayOptions.singularLabel }}
								{% endif %}
								#{{ loop.index0 }}
								({{ dataField.fieldType.name }}.{{ loop.index0 }})
                                {% if collapsible %}
                                    <div class="pull-right">
                                        <div class="btn-group" role="group">
                                            <button type="button" title="collapse" aria-expanded="false" class="btn btn-sm button-collapse"></button>
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
								{% endif %}
							</h3>
						</div>
						<div class="panel-body container-fluid {% if collapsible %}collapse{% endif %}">
							<div class="row">
								{% for grandchild in child.children %}
									<div class="{% if grandchild.fieldType.displayOptions.class is defined and grandchild.fieldType.displayOptions.class  %}{{ grandchild.fieldType.displayOptions.class }}{%else%}col-md-12{% endif %}">
										{{ macros|macro_fct(grandchild.fieldType.type|replace({'\\': '_'}), grandchild) }}
									</div>
									{% if grandchild.fieldType.displayOptions.lastOfRow is defined and grandchild.fieldType.displayOptions.lastOfRow %}
										</div><div class="row">
									{% endif %}
								{% endfor %}
							</div>
						</div>
					</div>
				</div>
			{% endfor %}
		</div>
	</div>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_ContainerFieldType(dataField) %}
{% import _self as macros %}
    {% if dataField.fieldType.displayOptions.label is defined and dataField.fieldType.displayOptions.label %}
    	<div class="panel panel-default">
			<div class="panel-heading">
				<h3 class="panel-title">
					{% if dataField.fieldType.displayOptions.icon is defined %}
						<i class="{{ dataField.fieldType.displayOptions.icon }}"></i> 
					{% endif %}
					{% if dataField.fieldType.displayOptions.label is defined and dataField.fieldType.displayOptions.label%}
						{{ dataField.fieldType.displayOptions.label }}
					{% else %}
						{{ dataField.fieldType.name }}
					{% endif %}
				</h3>
			</div>
			<div class="panel-body container-fluid">
	{% endif %}
	<div class="row">
		{% for child in dataField.children if not child.fieldType.deleted %}
		
			<div class="{% if child.fieldType.displayOptions.class is defined and child.fieldType.displayOptions.class  %}{{ child.fieldType.displayOptions.class }}{%else%}col-md-12{% endif %}">
				{{ macros|macro_fct(child.fieldType.type|replace({'\\': '_'}), child) }}
			</div>
			{% if child.fieldType.displayOptions.lastOfRow is defined and child.fieldType.displayOptions.lastOfRow %}
				</div><div class="row">
			{% endif %}
		{% endfor %}
	</div>
    {% if dataField.fieldType.displayOptions.label is defined and dataField.fieldType.displayOptions.label %}
    		</div>
		</div>
	{% endif %}
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_NestedFieldType(dataField) %}
{% import _self as macros %}
    {% if dataField.fieldType.displayOptions.label is defined %}
    	<div class="panel panel-default">
			<div class="panel-heading">
				<h3 class="panel-title">
					{% if dataField.fieldType.displayOptions.icon is defined %}
						<i class="{{ dataField.fieldType.displayOptions.icon }}"></i> 
					{% endif %}
					{% if dataField.fieldType.displayOptions.label is defined %}
						{{ dataField.fieldType.displayOptions.label }}
					{% else %}
						{{ dataField.fieldType.name }}
					{% endif %}
				</h3>
			</div>
			<div class="panel-body container-fluid">
	{% endif %}
	<div class="row">
		{% for child in dataField.children if not child.fieldType.deleted %}
			<div class="{% if child.fieldType.displayOptions.class is defined and child.fieldType.displayOptions.class  %}{{ child.fieldType.displayOptions.class }}{%else%}col-md-12{% endif %}">
				{{ macros|macro_fct(child.fieldType.type|replace({'\\': '_'}), child) }}
			</div>
			{% if child.fieldType.displayOptions.lastOfRow is defined and child.fieldType.displayOptions.lastOfRow %}
				</div><div class="row">
			{% endif %}
		{% endfor %}
	</div>
    {% if dataField.fieldType.displayOptions.label is defined %}
    		</div>
		</div>
	{% endif %}
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_TabsFieldType(dataField) %}
{% import _self as macros %}
	<div class="nav-tabs-custom">
		<ul class="nav nav-tabs">
            {% for child in dataField.children if not child.fieldType.deleted %}
            	<li class="{% if loop.index == 1%}active{% endif %}{% if child.fieldType.displayOptions.class is defined and child.fieldType.displayOptions.class != 'col-md-12' %} {{child.fieldType.displayOptions.class}}{% endif %}">
            		<a href="#item_{{ dataField.fieldType.id~'_'~loop.index }}__tab" data-toggle="tab" aria-expanded="false">
                        {% if child.fieldType.displayOptions.icon is defined and child.fieldType.displayOptions.icon%}
                        	<i class="{{ child.fieldType.displayOptions.icon }}"></i>
                        {% endif %}
                        {% if child.fieldType.displayOptions.label is defined %}
                            {{ child.fieldType.displayOptions.label }}
                        {% else %}
                            {{ child.fieldType.name }}
                        {% endif %}
					</a>
    			</li>
            	{% endfor %}
            </ul>
            <div class="tab-content">
            	{% for child in dataField.children if not child.fieldType.deleted %}
	              <div class="tab-pane{% if loop.index == 1%} active{% endif %}" id="item_{{ dataField.fieldType.id~'_'~loop.index }}__tab">
	              	{{ macros|macro_fct(child.fieldType.type|replace({'\\': '_'}), child) }}
	              </div>
              {% endfor %}
            </div>
            <!-- /.tab-content -->
         </div>  
	{{ macros.messages(dataField) }}
{% endmacro %}


{% macro EMS_CoreBundle_Form_DataField_DataLinkFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		{% if dataField.fieldType.displayOptions.label is defined %}
			<dt>{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})</dt>
		{% else %}
			<dt>{{ dataField.fieldType.name }}</dt>
		{% endif %}
		<dd>
			{% if dataField.rawData is iterable %}
				{% for value in dataField.rawData %}
		   			{{ value|data_link|raw }}
				{% endfor %}
			{% else %}
			   	{{ dataField.rawData|data_link|raw }}
			{% endif %}
		
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_SelectFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		{% if dataField.fieldType.displayOptions.label is defined %}
			<dt>{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})</dt>
		{% else %}
			<dt>{{ dataField.fieldType.name }}</dt>
		{% endif %}
		<dd>
			{% if dataField.fieldType.displayOptions.multiple %}
				<ul>
					{% for value in dataField.arrayTextValue if value  %}
						<li>{{ value }}</li>
					{% endfor %}
				</ul>
			{% else %}
				{{ dataField.textValue }}
			{% endif %}
		
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_OuuidFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		{% if dataField.fieldType.displayOptions.label is defined %}
			<dt>{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})</dt>
		{% else %}
			<dt>{{ dataField.fieldType.name }}</dt>
		{% endif %}
		<dd>{{ dataField.textValue }}</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_ComputedFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		{% if dataField.fieldType.displayOptions.label is defined %}
			<dt>{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})</dt>
		{% else %}
			<dt>{{ dataField.fieldType.name }}</dt>
		{% endif %}
		<dd>
			{% if dataField.fieldType.displayOptions.displayTemplate %}
				{{ dataField.fieldType.displayOptions.displayTemplate|generate_from_template({data: dataField.rawData, dataField: dataField})|raw }}
			{% elseif dataField.rawData is iterable %}
				Complex structure []
			{% else %}
				{{ dataField.rawData }}
			{% endif %}
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_TextStringFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		{% if dataField.fieldType.displayOptions.label is defined %}
			<dt>{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})</dt>
		{% else %}
			<dt>{{ dataField.fieldType.name }}</dt>
		{% endif %}
		
		<dd>{{ dataField.textValue }}</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_TextareaFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name }}
			{% endif %}
		</dt>
		<dd>
			<div class="panel panel-default">
				<div class="panel-body">
					{{ dataField.textValue }}
				</div>
			</div>
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_JSONFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name }}
			{% endif %}
		</dt>
		<dd>
			<div class="panel panel-default">
				<div class="panel-body">
					<pre>{{ dataField.rawData|json_encode }}</pre>
				</div>
			</div>
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_WysiwygFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name }}
			{% endif %}
		</dt>
		<dd>
			<div class="panel panel-default">
				<div class="panel-body">	
					{{ dataField.textValue|internal_links|raw }}
				</div>
			</div>
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_CodeFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name }}
			{% endif %}
		</dt>
		<dd>
			<div class="panel panel-default">
				<div class="panel-body">	
					<pre class="ems-code-editor" data-language="{{ dataField.fieldType.displayOptions.language }}" data-them="{{ dataField.fieldType.displayOptions.theme }}" {% if dataField.fieldType.displayOptions.height %}style="height: {{ dataField.fieldType.displayOptions.height }}px;"{% endif %}>{{ dataField.textValue|internal_links }}</pre>
				</div>
			</div>
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_PasswordFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name }}
			{% endif %}
		</dt>
		<dd>
			{% if dataField.textValue %}	
				***************
			{% else %}
				not defined
			{% endif %}
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_EmailFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name }}
			{% endif %}
		</dt>
		<dd>
			{{ dataField.textValue|raw }}
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_IconFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name }}
			{% endif %}
		</dt>
		<dd>
			<i class="{{ dataField.textValue|raw }}"></i> {{ dataField.textValue|raw }}
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_ColorPickerFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name }}
			{% endif %}
		</dt>
		<dd style="background-color: {{ dataField.textValue|raw }}; color:{%  if dataField.textValue|contrastratio('#000000') > dataField.textValue|contrastratio('#ffffff') %}#000000{% else %}#ffffff{% endif %};"> 
			{{ dataField.textValue|raw }}
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}




{% macro EMS_CoreBundle_Form_DataField_RadioFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name }}
			{% endif %}
		</dt>
		<dd>
			{{ dataField.textValue|raw }}
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_ChoiceFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name }}
			{% endif %}
		</dt>
		<dd>
			<ul>
			    {% set labels = dataField.fieldType.displayOptions.labels|replace({"\r":''})|split('\n') %}
			    {% set choices = dataField.fieldType.displayOptions.choices|replace({"\r":''})|split('\n') %}
						        
				{% if dataField.fieldType.displayOptions.multiple %}
					{% for value in dataField.arrayTextValue if value is not null %}
						{% set label = value %}
						{% if labels|length > 0 %}
						    {% for idx, item in choices if item == value %}
							    {% if idx < labels|length %}
							        {% set label = cycle(labels, idx)~' ('~value~')' %}
							    {% endif %}
							{% endfor %}
						{% endif %}
						<li>{{ label|raw }}</li>
					{% endfor %}
				{% else %}
					{% set label = dataField.textValue %}
				    {% for idx, item in choices if item == dataField.textValue %}
					    {% if idx < labels|length %}
					        {% set label = cycle(labels, idx)~' ('~dataField.textValue~')' %}
					    {% endif %}
					{% endfor %}
				    {{ label }}
				{% endif %}
			</ul>
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_CheckboxFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name|raw }}
			{% endif %}
		</dt>
		<dd>
			{% if dataField.rawData %}
		 		<i class="fa fa-check-square-o"></i>
			{% else %}
				<i class="fa fa-square-o"></i>
			{% endif %}
			{% if dataField.fieldType.displayOptions.question_label is defined and dataField.fieldType.displayOptions.question_label %}
				{{ dataField.fieldType.displayOptions.question_label }}
			{% endif %}
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_NumberFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name|raw }}
			{% endif %}
		</dt>
		<dd>
			{{ dataField.rawData }}
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_IntegerFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name|raw }}
			{% endif %}
		</dt>
		<dd>
			{{ dataField.rawData }}
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_DateFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name|raw }}
			{% endif %}
		</dt>
		<dd>
			<ul>
				{% for value in dataField.rawData %}
					<li>
						{{ value|date(dataField.fieldType.displayOptions.displayFormat|convertJavascriptDateFormat) }}
					</li>
				{% endfor %}
			</ul>
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_DateRangeFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name|raw }}
			{% endif %}
		</dt>
		{% set dateFrom = null %}
		{% if attribute(dataField.rawData, dataField.fieldType.mappingOptions.fromDateMachineName) is defined %}
			{% set dateFrom = attribute(dataField.rawData, dataField.fieldType.mappingOptions.fromDateMachineName) %}
		{% endif %}
		{% set dateTo = null %}
		{% if attribute(dataField.rawData, dataField.fieldType.mappingOptions.toDateMachineName) is defined %}
			{% set dateTo = attribute(dataField.rawData, dataField.fieldType.mappingOptions.toDateMachineName) %}
		{% endif %}
		
		
		<dd>
			<ul>
				{% if dateFrom %}
					<li>
						<b>From </b>
						{{ dateFrom|date(dataField.fieldType.displayOptions.locale.format|convertJavascriptDateRangeFormat) }}
					</li>	
				{% endif %}		
				{% if dateTo %}
					<li>
						<b>To </b>
						{{ dateTo|date(dataField.fieldType.displayOptions.locale.format|convertJavascriptDateRangeFormat) }}
					</li>	
				{% endif %}		
				{% if dateFrom and dateTo %}
					<li>
						<b>Duration </b> {{ dateFrom|date_difference(dateTo, dataField.fieldType.displayOptions.timePicker) }}
					</li>
				{% endif %}
			</ul>
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}

{% macro EMS_CoreBundle_Form_DataField_TimeFieldType(dataField) %}
{% import _self as macros %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name|raw }}
			{% endif %}
		</dt>
		<dd>
			{% if dataField.rawData %}
				{{ dataField.rawData|date(dataField.fieldType.options|getTimeFieldTimeFormat) }}
				({{ dataField.rawData|date(dataField.fieldType.mappingOptions.format|convertJavaDateFormat) }})
			{% endif %}
		</dd>
	</dl>
	{{ macros.messages(dataField) }}
{% endmacro %}