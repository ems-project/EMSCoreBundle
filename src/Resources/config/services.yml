# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
    templating: value
services:
    _defaults:
        public: true

    app.twig_extension: '@EMS\CoreBundle\Twig\AppExtension'
    EMS\CoreBundle\Twig\AppExtension:
        #class: EMS\CoreBundle\Twig\AppExtension
        arguments: ['@doctrine', '@security.authorization_checker', '@ems.service.user', '@ems.service.contenttype', '@router', '@twig', '@ems.form.factories.objectChoiceListFactory', '@ems.service.environment', '@logger', '@form.factory', '@ems.service.file' , '@ems_common.twig.runtime.request', '@mailer', '@ems_common.service.elastica', '@ems.service.search', '%ems_core.asset_config%']
        #public: false
        tags:
            - { name: twig.extension, priority: -2000 }
    app.twig_extension_revision: '@EMS\CoreBundle\Twig\RevisionRuntime'
    EMS\CoreBundle\Twig\RevisionRuntime:
        arguments:
            - '@ems.service.contenttype'
            - '@ems.service.environment'
            - '@ems.service.revision'
        tags:
            - { name: twig.runtime, priority: -2000 }
    app.twig_extension_user: '@EMS\CoreBundle\Twig\UserRuntime'
    EMS\CoreBundle\Twig\UserRuntime:
        arguments:
            - '@EMS\CoreBundle\Repository\UserRepository'
        tags:
            - { name: twig.runtime, priority: -2000 }
    app.twig.extension.stringloader:
        class: Twig_Extension_StringLoader
        tags:
             - { name: 'twig.extension' }
#### Begin list available ems ViewType ###
    ems.fieldtype.container:
        class: EMS\CoreBundle\Form\DataField\ContainerFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: container }
            - { name: form.type }
    ems.fieldtype.collection:
        class: EMS\CoreBundle\Form\DataField\CollectionFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch', '@ems.service.data', '@logger']
        tags:
            - { name: ems.form.datafieldtype, alias: collection }
            - { name: form.type }
    ems.fieldtype.colorpicker:
        class: EMS\CoreBundle\Form\DataField\ColorPickerFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: colorpicker }
            - { name: form.type }
    ems.fieldtype.nested:
        class: EMS\CoreBundle\Form\DataField\NestedFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: nested }
            - { name: form.type }
    ems.fieldtype.tabs:
        class: EMS\CoreBundle\Form\DataField\TabsFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: tabs }
            - { name: form.type }
    ems.fieldtype.ouuid:
        class: EMS\CoreBundle\Form\DataField\OuuidFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: ouuid }
            - { name: form.type }
    ems.fieldtype.computed:
        class: EMS\CoreBundle\Form\DataField\ComputedFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: computed }
            - { name: form.type }
    ems.fieldtype.json:
        class: EMS\CoreBundle\Form\DataField\JSONFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: json }
            - { name: form.type }
    ems.fieldtype.dataLink:
        class: EMS\CoreBundle\Form\DataField\DataLinkFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch', '@event_dispatcher']
        tags:
            - { name: ems.form.datafieldtype, alias: datalink }
            - { name: form.type }
    ems.fieldtype.textstring:
        class: EMS\CoreBundle\Form\DataField\TextStringFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: textstring }
            - { name: form.type }
    ems.fieldtype.wysiwyg:
        class: EMS\CoreBundle\Form\DataField\WysiwygFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch', '@router', '@ems.service.wysiwyg_styles_set', '@EMS\CommonBundle\Twig\AssetRuntime']
        tags:
            - { name: ems.form.datafieldtype, alias: wysiwyg }
            - { name: form.type }
    ems.fieldtype.code:
        class: EMS\CoreBundle\Form\DataField\CodeFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: code }
            - { name: form.type }
    ems.fieldtype.json_menu_editor:
        class: EMS\CoreBundle\Form\DataField\JsonMenuEditorFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: json_menu }
            - { name: form.type }
    ems.fieldtype.json_menu_nested_editor:
        class: EMS\CoreBundle\Form\DataField\JsonMenuNestedEditorFieldType
        arguments: ['@form.factory', '@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch', '@router']
        tags:
            - { name: ems.form.datafieldtype, alias: json_menu_nested }
            - { name: form.type }
    ems.fieldtype.textarea:
        class: EMS\CoreBundle\Form\DataField\TextareaFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: textarea }
            - { name: form.type }
    ems.fieldtype.select:
        class: EMS\CoreBundle\Form\DataField\SelectFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: select }
            - { name: form.type }
    ems.fieldtype.password:
        class: EMS\CoreBundle\Form\DataField\PasswordFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: password }
            - { name: form.type }
    ems.fieldtype.email:
        class: EMS\CoreBundle\Form\DataField\EmailFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: email }
            - { name: form.type }
    ems.fieldtype.icon:
        class: EMS\CoreBundle\Form\DataField\IconFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: icon }
            - { name: form.type }
    ems.fieldtype.asset:
        class: EMS\CoreBundle\Form\DataField\AssetFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch', '@ems.service.file']
        tags:
            - { name: ems.form.datafieldtype, alias: asset }
            - { name: form.type }
    ems.fieldtype.fileattachement:
        class: EMS\CoreBundle\Form\DataField\FileAttachmentFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch', '@ems.service.file', '@logger']
        tags:
            - { name: ems.form.datafieldtype, alias: file_attachment }
            - { name: form.type }
    ems.fieldtype.indexed_asset:
        class: EMS\CoreBundle\Form\DataField\IndexedAssetFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch', '@ems.service.file', '@session']
        tags:
            - { name: ems.form.datafieldtype, alias: file_attachment }
            - { name: form.type }
    ems.fieldtype.urlattachement:
        class: EMS\CoreBundle\Form\DataField\UrlAttachmentFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch', '@ems.service.file']
        tags:
            - { name: ems.form.datafieldtype, alias: url_attachment }
            - { name: form.type }
    ems.fieldtype.radio:
        class: EMS\CoreBundle\Form\DataField\RadioFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: radio }
            - { name: form.type }
    ems.fieldtype.choice:
        class: EMS\CoreBundle\Form\DataField\ChoiceFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: choice }
            - { name: form.type }
    ems.fieldtype.json_menu_link:
        class: EMS\CoreBundle\Form\DataField\JsonMenuLinkFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch', '@ems.service.contenttype', '@ems_common.service.elastica', '@ems_common.json.decoder']
        tags:
            - { name: ems.form.datafieldtype, alias: json_menu_link }
            - { name: form.type }
    ems.fieldtype.json_menu_nested_link:
        class: EMS\CoreBundle\Form\DataField\JsonMenuNestedLinkFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch', '@ems_common.service.elastica', '@ems_common.json.decoder']
        tags:
            - { name: ems.form.datafieldtype, alias: json_menu_nested_link }
            - { name: form.type }
    ems.fieldtype.checkbox:
        class: EMS\CoreBundle\Form\DataField\CheckboxFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: checkbox }
            - { name: form.type }
    ems.fieldtype.number:
        class: EMS\CoreBundle\Form\DataField\NumberFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: number }
            - { name: form.type }
    ems.fieldtype.integer:
        class: EMS\CoreBundle\Form\DataField\IntegerFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: integer }
            - { name: form.type }
    ems.fieldtype.date:
        class: EMS\CoreBundle\Form\DataField\DateFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: date }
            - { name: form.type }
    ems.fieldtype.date_time:
        class: EMS\CoreBundle\Form\DataField\DateTimeFieldType
        arguments: [ '@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch' ]
        tags:
            - { name: ems.form.datafieldtype, alias: date_time }
            - { name: form.type }
    ems.fieldtype.daterange:
        class: EMS\CoreBundle\Form\DataField\DateRangeFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: daterange }
            - { name: form.type }
    ems.fieldtype.time:
        class: EMS\CoreBundle\Form\DataField\TimeFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: time }
            - { name: form.type }
    ems.fieldtype.collection_item:
        class: EMS\CoreBundle\Form\DataField\CollectionItemFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: form.type }
    ems.fieldtype.copyto:
        class: EMS\CoreBundle\Form\DataField\CopyToFieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: copyto }
            - { name: form.type }
    ems.fieldtype.subfield:
        class: EMS\CoreBundle\Form\DataField\SubfieldType
        arguments: ['@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: form.type }
    ems.fieldtype.select_user_property:
        class: EMS\CoreBundle\Form\DataField\SelectUserPropertyFieldType
        arguments: [ '@ems.service.user', '@security.authorization_checker', '@form.registry', '@ems.service.elasticsearch']
        tags:
            - { name: ems.form.datafieldtype, alias: select_user_property }
            - { name: form.type }
#### End list available ems FieldType ###
#### Begin list of extended symfony types for ems field type needs###
    ems.exteneded.collectiontype:
        class: EMS\CoreBundle\Form\Form\EmsCollectionType
        arguments: ['@security.authorization_checker']
        tags:
            - { name: form.type }
    EMS\CoreBundle\Form\Submission\ProcessType:
        arguments: ['@router']
        tags:
            - { name: form.type }

    EMS\CoreBundle\Form\Form\SearchFormType:
        arguments: ['@security.authorization_checker', '@ems.service.sort_option', '@ems.service.search_field_option']
        tags:
            - { name: form.type }

#### End list available ems views ###
    ems.form.factories.objectChoiceListFactory:
        class: EMS\CoreBundle\Form\Factory\ObjectChoiceListFactory
        arguments: ['@ems.service.contenttype', '@ems.service.objectchoicecache']
    ems.form.factories.contentTypeFieldChoiceListFactory:
        class: EMS\CoreBundle\Form\Factory\ContentTypeFieldChoiceListFactory
        arguments: ['@ems.service.contenttype']
    ems.form.field.objectpickertype:
        class: EMS\CoreBundle\Form\Field\ObjectPickerType
        arguments: ['@ems.form.factories.objectChoiceListFactory', '@ems.service.contenttype']
        tags:
            - { name: form.type }
    ems.form.field.contenttypefieldpickertype:
        class: EMS\CoreBundle\Form\Field\ContentTypeFieldPickerType
        arguments: ['@ems.form.factories.contentTypeFieldChoiceListFactory']
        tags:
            - { name: form.type }
    ems.form.field.querySearchPickerType:
        class: EMS\CoreBundle\Form\Field\QuerySearchPickerType
        arguments: ['@ems.service.query_search']
        tags:
            - { name: form.type }
    ems.form.field.datafieldtypepickertype:
        class: EMS\CoreBundle\Form\Field\FieldTypePickerType
        tags:
            - { name: form.type }

    ems.form.field.wysiwygstylessetpickertype:
        class: EMS\CoreBundle\Form\Field\WysiwygStylesSetPickerType
        arguments: ['@ems.service.wysiwyg_styles_set']
        tags:
            - { name: form.type }
    ems.form.field.rolepickertype:
        class: EMS\CoreBundle\Form\Field\RolePickerType
        arguments: ['@ems.service.user']
        tags:
            - { name: form.type }
    ems.form.field.environmentpickertype:
        class: EMS\CoreBundle\Form\Field\EnvironmentPickerType
        arguments: ['@ems.service.environment']
        tags:
            - { name: form.type }
    ems.form.field.contenttypepickertype:
        class: EMS\CoreBundle\Form\Field\ContentTypePickerType
        arguments: ['@ems.service.contenttype']
        tags:
            - { name: form.type }
    ems.form.fieldtype.fieldtypetype:
        class: EMS\CoreBundle\Form\FieldType\FieldTypeType
        arguments: ['@ems.form.field.datafieldtypepickertype', '@form.registry', '@logger']
        tags:
            - { name: form.type }
    ems.form.form.templatetype:
        class: EMS\CoreBundle\Form\Form\TemplateType
        arguments: ['%ems_core.circles_object%', '@ems.service.environment']
        tags:
            - { name: form.type }
    ems.form.form.querysearchtype:
        class: EMS\CoreBundle\Form\Form\QuerySearchType
        arguments: ['@ems.service.environment']
        tags:
            - { name: form.type }
    ems.form.form.notificationtype:
        class: EMS\CoreBundle\Form\Form\NotificationFormType
        arguments: ['%ems_core.circles_object%', '@ems.service.environment']
        tags:
            - { name: form.type }
    ems.form.form.revisiontype:
        class: EMS\CoreBundle\Form\Form\RevisionType
        arguments: ['@form.registry']
        tags:
            - { name: form.type }
    ems.form.revision_json_menu_nested:
        class: EMS\CoreBundle\Form\Form\RevisionJsonMenuNestedType
        arguments: [ '@form.registry' ]
        tags:
            - { name: form.type }
    ems.form.field.analyzeroptionstype:
        class: EMS\CoreBundle\Form\Field\AnalyzerOptionsType
        arguments: ['@doctrine']
        tags:
            - { name: form.type }
    ems.form.field.analyzerpickertype:
        class: EMS\CoreBundle\Form\Field\AnalyzerPickerType
        arguments: ['@doctrine']
        tags:
            - { name: form.type }
    ems.form.field.alignindexes:
        class: EMS\CoreBundle\Form\Field\AlignIndexesType
        arguments: ['@ems.service.alias']
        tags:
            - { name: form.type }
    ems.form.managed_alias:
        class: EMS\CoreBundle\Form\Form\ManagedAliasType
        arguments: ['@ems.service.alias']
        tags:
            - { name: form.type }
    ems.form.field.select_user_property:
        class: EMS\CoreBundle\Form\Field\SelectUserPropertyType
        arguments: [  '@ems.service.user' ]
        tags:
            - { name: form.type }


### regular services
    ems.service.mapping:
        class: EMS\CoreBundle\Service\Mapping
        arguments: ['@logger', '@ems_common.elastica.client', '@EMS\CoreBundle\Service\EnvironmentService', '@ems.form.fieldtype.fieldtypetype', '@ems.service.elasticsearch', '@ems_common.service.elastica', '%ems_core.instance_id%']
    EMS\CoreBundle\Service\DataService:
        class: EMS\CoreBundle\Service\DataService
        arguments: ['@doctrine', '@security.authorization_checker', '@security.token_storage', '%ems_core.lock_time%', '@ems_common.service.elastica', '@ems.service.mapping', '%ems_core.instance_id%', '@session', '@form.factory', '@service_container', '@form.registry', '@event_dispatcher', '@ems.service.contenttype', '%ems_core.private_key%', '@logger', '@ems_common.storage.manager', '@twig', '@app.twig_extension', '@ems.service.user', '@EMS\CoreBundle\Repository\RevisionRepository', '@ems.service.environment', '@ems.service.search', '@ems.service.index', '%ems_core.pre_generated_ouuids%', '@ems.service.revision.post_processing']
        tags:
            - { name: kernel.event_listener, event: ems_core.revision.update_referers, method: updateReferers, priority: 0 }
    ems.service.revision.post_processing:
        class: EMS\CoreBundle\Service\Revision\PostProcessingService
        arguments: ['@twig', '@form.factory', '@logger']
    ems.service.revision:
        class: EMS\CoreBundle\Service\Revision\RevisionService
        arguments: ['@ems.service.data', '@logger', '@EMS\CoreBundle\Repository\RevisionRepository']
    ems.service.alias:
        class: EMS\CoreBundle\Service\AliasService
        arguments: ['@logger', '@ems_common.elastica.client', '@EMS\CoreBundle\Repository\EnvironmentRepository', '@EMS\CoreBundle\Repository\ManagedAliasRepository', '@ems_common.service.elastica']
    EMS\CoreBundle\Service\AliasService: '@ems.service.alias'
    ems.service.index:
        class: EMS\CoreBundle\Service\IndexService
        arguments: ['@ems.service.alias', '@ems_common.elastica.client', '@ems.service.contenttype', '@logger', '@ems.service.mapping']
    EMS\CoreBundle\Service\IndexService: '@ems.service.index'
    ems.elasticsearch.bulker:
        class: EMS\CoreBundle\Elasticsearch\Bulker
        arguments:
            - '@ems_common.elastica.client'
            - '@logger'
            - '@ems.service.data'
            - '@ems.service.mapping'
    ems.elasticsearch.indexer:
        class: EMS\CoreBundle\Elasticsearch\Indexer
        arguments:
            - '@ems.service.index'
            - '@logger'
            - '@ems.service.mapping'
            - '@ems.service.alias'
    ems.service.environment: '@EMS\CoreBundle\Service\EnvironmentService'
    EMS\CoreBundle\Service\EnvironmentService:
        arguments: ['@doctrine', '@session', '@ems.service.user', '@security.authorization_checker', '@logger', '@ems_common.service.elastica', '%ems_core.instance_id%']
    ems.service.contenttype: '@EMS\CoreBundle\Service\ContentTypeService'
    EMS\CoreBundle\Service\ContentTypeService:
        arguments: ['@doctrine', '@logger', '@ems.service.mapping', '@ems_common.service.elastica', '@ems.service.environment', '@form.registry', '@translator', '%ems_core.instance_id%']
    ems.service.user:
        class: EMS\CoreBundle\Service\UserService
        arguments: ['@doctrine', '@session', '@security.token_storage', '@security.helper', '%security.role_hierarchy.roles%']
    ems.service.wysiwyg_profile:
        class: EMS\CoreBundle\Service\WysiwygProfileService
        arguments: ['@doctrine', '@logger', '@translator']
    ems.service.aggregate_option:
        class: EMS\CoreBundle\Service\AggregateOptionService
        arguments: ['@doctrine', '@logger', '@translator', '@ems_common.service.elastica']
    ems.service.sort_option:
        class: EMS\CoreBundle\Service\SortOptionService
        arguments: ['@doctrine', '@logger', '@translator']
    ems.service.search_field_option:
        class: EMS\CoreBundle\Service\SearchFieldOptionService
        arguments: ['@doctrine', '@logger', '@translator']
    ems.service.wysiwyg_styles_set:
        class: EMS\CoreBundle\Service\WysiwygStylesSetService
        arguments: ['@doctrine', '@logger', '@translator']
    ems.service.objectchoicecache:
        class: EMS\CoreBundle\Service\ObjectChoiceCacheService
        arguments: ['@logger', '@ems.service.contenttype', '@security.authorization_checker', '@security.token_storage', '@ems_common.service.elastica']
    ems.service.publish:
        class: EMS\CoreBundle\Service\PublishService
        arguments: ['@doctrine', '@security.authorization_checker', '@security.token_storage', '@ems.service.index', '@ems.service.mapping', '%ems_core.instance_id%', '@session', '@ems.service.contenttype', '@ems.service.environment', '@ems.service.data', '@ems.service.user', '@event_dispatcher', '@logger']
    ems.service.notification:
        class: EMS\CoreBundle\Service\NotificationService
        arguments: ['@doctrine', '@ems.repository.template', '@ems.service.user', '@logger', '@session', '@service_container', '@ems.service.data', '%ems_core.from_email%', '@twig']
        tags:
            - { name: kernel.event_listener, event: revision.new_draft, method: newDraftEvent, priority: 0 }
            - { name: kernel.event_listener, event: revision.finalize_draft, method: finalizeDraftEvent, priority: 0 }
            - { name: kernel.event_listener, event: revision.publish, method: publishEvent, priority: 0 }
            - { name: kernel.event_listener, event: revision.unpublish, method: unpublishEvent, priority: 0 }
    ems.service.i18n: '@EMS\CoreBundle\Service\I18nService'
    EMS\CoreBundle\Service\I18nService:
        class: EMS\CoreBundle\Service\I18nService
        arguments: ['@doctrine', '@EMS\CoreBundle\Repository\I18nRepository']
    ems.service.rest_client:
        class: EMS\CoreBundle\Service\RestClientService
    ems.service.asset_extractor:
        class: EMS\CoreBundle\Service\AssetExtractorService
        arguments: ["@ems.service.rest_client", '@logger', '@doctrine', '@ems.service.file', '%ems_core.tika_server%', '%kernel.project_dir%', '%ems_core.tika_download_url%']
        tags:
            - { name: kernel.cache_warmer }
    ems.service.search:
        class: EMS\CoreBundle\Service\SearchService
        arguments: ['@doctrine', '@ems.service.mapping', '@ems_common.service.elastica', '@ems.service.environment', '@ems.service.contenttype']
    ems.service.file:
        class: EMS\CoreBundle\Service\FileService
        arguments: ['@doctrine', '@ems_common.storage.manager', '@ems_common.storage.processor', '@ems.repository.uploaded_asset_repository',  '%kernel.project_dir%']
    ems.service.helper:
        class: EMS\CoreBundle\Service\HelperService
        arguments: ['@doctrine', '@request_stack', '%ems_core.paging_size%']
    ems.service.elasticsearch:
        class: EMS\CoreBundle\Service\ElasticsearchService
        arguments: ['@logger', '@ems_common.service.elastica']
    ems.service.template:
        class: EMS\CoreBundle\Service\TemplateService
        arguments: ['@doctrine', '@logger', '@twig']
    ems.service.job: '@EMS\CoreBundle\Service\JobService'
    EMS\CoreBundle\Service\JobService:
        class: EMS\CoreBundle\Service\JobService
        arguments: ['@doctrine', '@kernel', '@logger', '@EMS\CoreBundle\Repository\JobRepository']
    ems.service.transformcontenttype:
        class: EMS\CoreBundle\Service\TransformContentTypeService
        arguments: ['@logger', '@ems_common.service.elastica', '@ems.service.contenttype', '@ems.service.data', '@form.factory']
    ems.service.document:
        class: EMS\CoreBundle\Service\DocumentService
        arguments: ['@doctrine', '@ems.service.data', '@form.factory', '@ems.elasticsearch.bulker', '%ems_core.instance_id%']
    EMS\CoreBundle\Service\ActionService: '@ems.service.action'
    ems.service.action:
        class: EMS\CoreBundle\Service\ActionService
        arguments: ['@ems.repository.template', '@logger']
    ems.security.authenticator:
        class: EMS\CoreBundle\Security\Authenticator
        arguments: [ '@security.authentication.manager', '@doctrine', '@ems.service.user']
    ems.form_submission:
        class: EMS\CoreBundle\Service\Form\Submission\FormSubmissionService
        arguments: ['@ems.repository.form_submission', '@ems.service.template', '@twig', '@session', '@translator']
    ems.mailer:
        class: EMS\CoreBundle\Service\MailerService
        arguments: ['@mailer', '%ems_core.from_email%', '%ems_core.name%']
    ems.form_verification:
        class: EMS\CoreBundle\Service\Form\Verification\FormVerificationService
        arguments: ['@ems.repository.form_verification']

### command services ###
    ems.command.revision.copy:
        class: EMS\CoreBundle\Command\RevisionCopyCommand
        arguments:
            - '@ems.factory.revision_copy_context'
            - '@ems.service.revision_copy'
            - '@ems.service.elasticsearch'
            - '@ems_common.service.elastica'
        tags:
            - { name: console.command }
    ems.factory.revision_copy_context:
        class: EMS\CoreBundle\Service\Revision\Copy\CopyContextFactory
        arguments: ['@ems.service.environment', '@ems_common.service.elastica']
    ems.service.revision_copy:
        class: EMS\CoreBundle\Service\Revision\Copy\CopyService
        arguments:
            - '@EMS\CoreBundle\Service\DataService'
            - '@ems.service.revision'
    ems.contenttype.migrate:
        class: EMS\CoreBundle\Command\MigrateCommand
        arguments: ['@doctrine', '@ems_common.service.elastica', '@ems.service.document']
        tags:
            -  { name: console.command }
    ems.make.document:
        class: EMS\CoreBundle\Command\DocumentCommand
        arguments: ['@ems.service.contenttype', '@ems.service.document', '@ems.service.data', '%ems_core.default_bulk_size%']
        tags:
            -  { name: console.command }
    ems.contenttype.export:
        class: EMS\CoreBundle\Command\ExportDocumentsCommand
        arguments: ['@logger', '@ems.service.template', '@ems.service.data', '@ems.service.contenttype', '@ems.service.environment', '@EMS\CommonBundle\Twig\RequestRuntime', '@ems_common.service.elastica', '%ems_core.instance_id%']
        tags:
            -  { name: console.command }
    ems.environment.rebuild:
        class: EMS\CoreBundle\Command\RebuildCommand
        arguments: ['@doctrine', '@logger', '@ems.service.contenttype', '@ems.service.environment', '@ems.environment.reindex', '@ems_common.service.elastica', '@ems.service.mapping', '@ems.service.alias', '%ems_core.instance_id%', '%ems_core.default_bulk_size%']
        tags:
            -  { name: console.command }
    ems.delete.orphans:
        class: EMS\CoreBundle\Command\DeleteOrphanIndexesCommand
        arguments: ['@ems.service.index']
        tags:
            -  { name: console.command }
    ems.environment.recompute:
        class: EMS\CoreBundle\Command\RecomputeCommand
        arguments: ['@ems.service.data', '@doctrine', '@form.factory', '@ems.service.publish', '@logger', '@ems.service.contenttype', '@EMS\CoreBundle\Repository\ContentTypeRepository', '@EMS\CoreBundle\Repository\RevisionRepository', '@ems.service.index', '@ems.service.search']
        tags:
            -  { name: console.command }
    ems.environment.removeexpiredsubmissions:
        class: EMS\CoreBundle\Command\RemoveExpiredSubmissionsCommand
        arguments: ['@ems.form_submission', '@logger']
        tags:
            -  { name: console.command }
    ems.environment.emailsubmissions:
        class: EMS\CoreBundle\Command\EmailSubmissionsCommand
        arguments: ['@ems.form_submission', '@logger', '@ems.mailer']
        tags:
            -  { name: console.command }
    ems.environment.updatemetafield:
        class: EMS\CoreBundle\Command\UpdateMetaFieldCommand
        arguments: ['@doctrine', '@logger', '@ems.service.data']
        tags:
            -  { name: console.command }
    ems.environment.align:
        class: EMS\CoreBundle\Command\AlignCommand
        arguments: ['@doctrine', '@logger', '@ems_common.service.elastica', '@ems.service.data', '@ems.service.contenttype', '@ems.service.environment', '@ems.service.publish']
        tags:
            -  { name: console.command }
    ems.environment.reindex:
        class: EMS\CoreBundle\Command\ReindexCommand
        arguments: ['@doctrine', '@logger', '@ems.service.mapping', '@service_container', '%ems_core.instance_id%', '@ems.service.data', '@ems.elasticsearch.bulker', '%ems_core.default_bulk_size%']
        tags:
            -  { name: console.command }
    ems.contenttype.delete:
        class: EMS\CoreBundle\Command\DeleteCommand
        arguments: ['@doctrine', '@logger', '@ems.service.index', '@ems.service.mapping', '@service_container', '@ems.service.contenttype', '@ems.service.environment']
        tags:
            -  { name: console.command }

    ems.contenttype.clean:
        class: EMS\CoreBundle\Command\CleanDeletedContentTypeCommand
        arguments: ['@doctrine', '@logger', '@ems.service.mapping', '@service_container']
        tags:
            -  { name: console.command }
    ems.revisions.index-file-fields:
        class: EMS\CoreBundle\Command\IndexFileCommand
        arguments: ['@logger', '@doctrine', '@ems.service.contenttype', '@ems.service.asset_extractor', '@ems.service.file']
        tags:
            -  { name: console.command }
    ems.environment.list:
        class: EMS\CoreBundle\Command\EnvironmentCommand
        arguments: ['@ems.service.environment']
        tags:
            -  { name: console.command }
    EMS\CoreBundle\Command\SynchronizeAssetCommand:
        arguments: ['@logger', '@doctrine', '@ems.service.contenttype', '@ems.service.asset_extractor', '@ems.service.file']
        tags:
            - { name: console.command }
    EMS\CoreBundle\Command\CleanAssetCommand:
        arguments: ['@logger', '@doctrine', '@ems.service.file']
        tags:
            - { name: console.command }
    EMS\CoreBundle\Command\AlignManagedAliases:
        arguments: ['@logger', '@ems.service.alias']
        tags:
            - { name: console.command }
    EMS\CoreBundle\Command\ManagedAliases:
        arguments: ['@logger', '@ems.service.alias']
        tags:
            - { name: console.command }
    EMS\CoreBundle\Command\ExtractAssetCommand:
        arguments: ['@logger', '@ems.service.asset_extractor', '@ems_common.storage.manager']
        tags:
            - { name: console.command }
    ems.contenttype.transform:
        class: EMS\CoreBundle\Command\TransformContentTypeCommand
        arguments: ['@logger', '@ems.service.contenttype', '@ems.service.transformcontenttype']
        tags:
            - { name: console.command }
    ems.contenttype.activate:
        class: EMS\CoreBundle\Command\ActivateContentTypeCommand
        arguments: ['@logger', '@ems.service.contenttype']
        tags:
            - { name: console.command }
    ems.environment.create:
        class: EMS\CoreBundle\Command\CreateEnvironmentCommand
        arguments: ['@logger', '@ems.service.environment', '@ems.service.data']
        tags:
            - { name: console.command }
    ems.revisions.unlock:
        class: EMS\CoreBundle\Command\UnlockRevisionsCommand
        arguments: ['@logger', '@ems.service.data', '@ems.service.contenttype']
        tags:
            - { name: console.command }
    ems.job.run:
        class: EMS\CoreBundle\Command\JobCommand
        arguments: ['@ems.service.job', '%ems_core.date_time_format%']
        tags:
            - { name: console.command }

#### security services
    api_key_user_provider:
        class: EMS\CoreBundle\Security\ApiKeyUserProvider
        arguments: ['@ems.service.user']
    apikey_authenticator:
        class:  EMS\CoreBundle\Security\ApiKeyAuthenticator
        public: false

#### UserProfile from LocalUserBundle
    ems.form.userprofile:
        class: EMS\CoreBundle\Form\UserProfileType
        arguments: ['@security.token_storage']
        tags:
            - { name: form.type }

#### aliases
    EMS\CoreBundle\Elasticsearch\Bulker: '@ems.elasticsearch.bulker'
    EMS\CoreBundle\Elasticsearch\Indexer: '@ems.elasticsearch.indexer'
    EMS\CoreBundle\Service\FileService: '@ems.service.file'
    EMS\CoreBundle\Service\ElasticsearchService: '@ems.service.elasticsearch'
    EMS\CoreBundle\Service\AssetExtractorService: '@ems.service.asset_extractor'
    EMS\CoreBundle\Service\UserService: '@ems.service.user'
    EMS\CommonBundle\Helper\Text\Encoder: '@ems_common.text.encoder'
    EMS\CoreBundle\Service\SearchService: '@ems.service.search'
    EMS\CoreBundle\Service\PublishService: '@ems.service.publish'
    EMS\CoreBundle\Service\AggregateOptionService: '@ems.service.aggregate_option'
    EMS\CoreBundle\Service\Mapping: '@ems.service.mapping'
    EMS\CoreBundle\Service\SortOptionService: '@ems.service.sort_option'
    EMS\CoreBundle\Service\WysiwygProfileService: '@ems.service.wysiwyg_profile'
    EMS\CoreBundle\Service\SearchFieldOptionService: '@ems.service.search_field_option'
    EMS\CoreBundle\Service\WysiwygStylesSetService: '@ems.service.wysiwyg_styles_set'
    EMS\CoreBundle\Service\NotificationService: '@ems.service.notification'
    EMS\CoreBundle\Service\HelperService: '@ems.service.helper'
    EMS\CoreBundle\Form\Factory\ObjectChoiceListFactory: '@ems.form.factories.objectChoiceListFactory'


#### Will be mark as deprecated soon
    ems.service.data:
        alias: 'EMS\CoreBundle\Service\DataService'
        public: true

### Loggers ####
    ems_common.monolog.ems_handler:
        class: EMS\CommonBundle\Logger\ElasticsearchLogger
        arguments: ['%ems_core.log_level%', '%ems_core.instance_id%', '', 'ems_core', '@ems_common.elastica.client', '@security.helper', '@ems_common.service.mapping', '%ems_core.log_by_pass%']
        tags:
            - { name: kernel.cache_warmer }
            - { name: kernel.event_listener, event: kernel.terminate }
            - { name: kernel.event_listener, event: console.terminate }
    ems_common.monolog.flash_handler:
        class: EMS\CommonBundle\Logger\FlashMessageLogger
        arguments: ['@session', '@translator', 'EMSCoreBundle']

### Repositories ###
    EMS\CoreBundle\Repository\ContentTypeRepository:
        class: Doctrine\ORM\EntityRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            - EMS\CoreBundle\Entity\ContentType
    EMS\CoreBundle\Repository\EnvironmentRepository:
        class: Doctrine\ORM\EntityRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            - EMS\CoreBundle\Entity\Environment
    EMS\CoreBundle\Repository\I18nRepository:
        class: Doctrine\ORM\EntityRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            - EMS\CoreBundle\Entity\I18n
    EMS\CoreBundle\Repository\JobRepository:
        class: Doctrine\ORM\EntityRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            - EMS\CoreBundle\Entity\Job
    EMS\CoreBundle\Repository\ManagedAliasRepository:
        class: Doctrine\ORM\EntityRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            - EMS\CoreBundle\Entity\ManagedAlias
    EMS\CoreBundle\Repository\RevisionRepository:
        class: Doctrine\ORM\EntityRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            - EMS\CoreBundle\Entity\Revision
    EMS\CoreBundle\Repository\UserRepository:
        class: Doctrine\ORM\EntityRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            - EMS\CoreBundle\Entity\User
    ems.repository.form_submission:
        class: EMS\CoreBundle\Repository\FormSubmissionRepository
        arguments:
            - '@doctrine'
    ems.repository.form_verification:
        class: EMS\CoreBundle\Repository\FormVerificationRepository
        arguments:
            - '@doctrine'
    ems.repository.uploaded_asset_repository:
        class: EMS\CoreBundle\Repository\UploadedAssetRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            - EMS\CoreBundle\Entity\UploadedAsset