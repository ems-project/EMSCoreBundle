# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
    templating: value
services:
    _defaults:
        public: true

### regular services
    ems.service.mapping:
        class: EMS\CoreBundle\Service\Mapping
        arguments: ['@emsco.logger', '@ems_common.elastica.client', '@EMS\CoreBundle\Service\EnvironmentService', '@ems.form.fieldtype.fieldtypetype', '@ems.service.elasticsearch', '@ems_common.service.elastica', '%ems_core.instance_id%']
    EMS\CoreBundle\Service\DataService:
        class: EMS\CoreBundle\Service\DataService
        arguments: ['@doctrine', '@security.authorization_checker', '@security.token_storage', '%ems_core.lock_time%', '@ems_common.service.elastica', '@ems.service.mapping', '%ems_core.instance_id%', '@session', '@form.factory', '@service_container', '@form.registry', '@event_dispatcher', '@ems.service.contenttype', '%ems_core.private_key%', '@emsco.logger', '@emsco.logger.audit', '@ems_common.storage.manager', '@twig', '@app.twig_extension', '@ems.service.user', '@EMS\CoreBundle\Repository\RevisionRepository', '@ems.service.environment', '@ems.service.search', '@ems.service.index', '%ems_core.pre_generated_ouuids%', '@ems.service.revision.post_processing']
        tags:
            - { name: kernel.event_listener, event: EMS\CoreBundle\Event\UpdateRevisionReferersEvent, method: updateReferers, priority: 0 }
    ems.service.revision.post_processing:
        class: EMS\CoreBundle\Service\Revision\PostProcessingService
        arguments: ['@twig', '@form.factory', '@emsco.logger']
    ems.service.revision:
        class: EMS\CoreBundle\Service\Revision\RevisionService
        arguments: ['@ems.service.data', '@logger', '@emsco.logger.audit', '@EMS\CoreBundle\Repository\RevisionRepository', '@ems.service.publish', '@ems_common.service.elastica']
    ems.service.alias:
        class: EMS\CoreBundle\Service\AliasService
        arguments: ['@logger', '@ems_common.elastica.client', '@EMS\CoreBundle\Repository\EnvironmentRepository', '@EMS\CoreBundle\Repository\ManagedAliasRepository', '@ems_common.service.elastica']
    EMS\CoreBundle\Service\AliasService: '@ems.service.alias'
    ems.service.index:
        class: EMS\CoreBundle\Service\IndexService
        arguments: ['@ems.service.alias', '@ems_common.elastica.client', '@ems.service.contenttype', '@logger', '@ems.service.mapping']
    EMS\CoreBundle\Service\IndexService: '@ems.service.index'
    ems.elasticsearch.bulker:
        class: EMS\CoreBundle\Elasticsearch\Bulker
        arguments:
            - '@ems_common.elastica.client'
            - '@logger'
            - '@ems.service.data'
            - '@ems.service.mapping'
    ems.elasticsearch.indexer:
        class: EMS\CoreBundle\Elasticsearch\Indexer
        arguments:
            - '@ems.service.index'
            - '@logger'
            - '@ems.service.mapping'
            - '@ems.service.alias'
    ems.service.environment: '@EMS\CoreBundle\Service\EnvironmentService'
    EMS\CoreBundle\Service\EnvironmentService:
        arguments: ['@doctrine',  '@ems.service.user', '@security.authorization_checker', '@logger', '@ems_common.service.elastica', '%ems_core.instance_id%']
        tags:
            - { name: emsco.entity.service }
    ems.service.contenttype: '@EMS\CoreBundle\Service\ContentTypeService'
    EMS\CoreBundle\Service\ContentTypeService:
        arguments: ['@doctrine', '@logger', '@ems.service.mapping', '@ems_common.service.elastica', '@ems.service.environment', '@security.authorization_checker', '@EMS\CoreBundle\Repository\RevisionRepository', '@security.token_storage', '%ems_core.circles_object%']
        tags:
            - { name: emsco.entity.service }
    ems.service.user:
        class: EMS\CoreBundle\Service\UserService
        arguments: ['@doctrine', '@security.token_storage', '@security.helper', '@ems.repository.user', '@ems.repository.search', '%security.role_hierarchy.roles%']
    ems.service.wysiwyg_profile:
        class: EMS\CoreBundle\Service\WysiwygProfileService
        arguments: ['@ems.repository.wysiwyg_profile', '@logger']
        tags:
            - { name: emsco.entity.service }
    ems.service.aggregate_option:
        class: EMS\CoreBundle\Service\AggregateOptionService
        arguments: ['@doctrine', '@logger', '@translator', '@ems_common.service.elastica']
    ems.service.sort_option:
        class: EMS\CoreBundle\Service\SortOptionService
        arguments: ['@doctrine', '@logger', '@translator']
    ems.service.search_field_option:
        class: EMS\CoreBundle\Service\SearchFieldOptionService
        arguments: ['@doctrine', '@logger', '@translator']
    ems.service.wysiwyg_styles_set:
        class: EMS\CoreBundle\Service\WysiwygStylesSetService
        arguments: ['@ems.repository.wysiwyg_style_set', '@logger']
        tags:
            - { name: emsco.entity.service }
    ems.service.objectchoicecache:
        class: EMS\CoreBundle\Service\ObjectChoiceCacheService
        arguments: ['@logger', '@ems.service.contenttype', '@security.authorization_checker', '@security.token_storage', '@ems_common.service.elastica', '@ems.service.query_search']
    ems.service.publish:
        class: EMS\CoreBundle\Service\PublishService
        arguments: ['@doctrine', '@security.authorization_checker', '@ems.service.index', '@ems.service.contenttype', '@ems.service.environment', '@ems.service.data', '@ems.service.user', '@event_dispatcher', '@emsco.logger', '@emsco.logger.audit', '@ems.elasticsearch.bulker']
    ems.service.notification:
        class: EMS\CoreBundle\Service\NotificationService
        arguments: ['@doctrine', '@ems.service.user', '@logger', '@service_container', '@ems.service.data', '%ems_core.from_email%', '@twig']
        tags:
            - { name: kernel.event_listener, event: EMS\CoreBundle\Event\RevisionNewDraftEvent, method: newDraftEvent, priority: 0 }
            - { name: kernel.event_listener, event: EMS\CoreBundle\Event\RevisionFinalizeDraftEvent, method: finalizeDraftEvent, priority: 0 }
            - { name: kernel.event_listener, event: EMS\CoreBundle\Event\RevisionPublishEvent, method: publishEvent, priority: 0 }
            - { name: kernel.event_listener, event: EMS\CoreBundle\Event\RevisionUnpublishEvent, method: unpublishEvent, priority: 0 }
    ems.service.i18n: '@EMS\CoreBundle\Service\I18nService'
    EMS\CoreBundle\Service\I18nService:
        class: EMS\CoreBundle\Service\I18nService
        arguments: ['@ems.repository.i18n']
        tags:
            - { name: emsco.entity.service }
    ems.service.rest_client:
        class: EMS\CoreBundle\Service\RestClientService
    ems.service.asset_extractor:
        class: EMS\CoreBundle\Service\AssetExtractorService
        arguments: ["@ems.service.rest_client", '@logger', '@doctrine', '@ems.service.file', '%ems_core.tika_server%', '%kernel.project_dir%', '%ems_core.tika_download_url%']
        tags:
            - { name: kernel.cache_warmer }
    ems.service.search:
        class: EMS\CoreBundle\Service\SearchService
        arguments: ['@doctrine', '@ems.service.mapping', '@ems_common.service.elastica', '@ems.service.environment', '@ems.service.contenttype']
    ems.service.file:
        class: EMS\CoreBundle\Service\FileService
        arguments: ['@doctrine', '@ems_common.storage.manager', '@ems_common.storage.processor', '@ems.repository.uploaded_asset_repository',  '%kernel.project_dir%']
    ems.service.helper:
        class: EMS\CoreBundle\Service\HelperService
        arguments: ['@doctrine', '@request_stack', '%ems_core.paging_size%']
    ems.service.elasticsearch:
        class: EMS\CoreBundle\Service\ElasticsearchService
        arguments: [ '@ems_common.service.elastica']
    ems.service.template:
        class: EMS\CoreBundle\Service\TemplateService
        arguments: ['@twig']
    ems.service.job: '@EMS\CoreBundle\Service\JobService'
    EMS\CoreBundle\Service\JobService:
        class: EMS\CoreBundle\Service\JobService
        arguments: ['@doctrine', '@kernel', '@logger', '@EMS\CoreBundle\Repository\JobRepository', '@security.token_storage']
        tags:
            - { name: emsco.entity.service }
    ems.service.document:
        class: EMS\CoreBundle\Service\DocumentService
        arguments: ['@doctrine', '@ems.service.data', '@form.factory', '@ems.elasticsearch.bulker', '@EMS\CoreBundle\Repository\RevisionRepository']
    EMS\CoreBundle\Service\ActionService: '@ems.service.action'
    ems.service.action:
        class: EMS\CoreBundle\Service\ActionService
        arguments: ['@ems.repository.template', '@logger']
    EMS\CoreBundle\Service\ReleaseService: '@ems.service.release'
    ems.service.release:
        class: EMS\CoreBundle\Service\ReleaseService
        arguments: ['@ems.repository.release', '@ems.service.contenttype' ,'@ems.service.data', '@ems.service.release_revision', '@ems.service.publish','@logger']
    EMS\CoreBundle\Service\ReleaseRevisionService: '@ems.service.release_revision'
    ems.service.release_revision:
        class: EMS\CoreBundle\Service\ReleaseRevisionService
        arguments: ['@ems.repository.release_revision', '@EMS\CoreBundle\Repository\RevisionRepository', '@logger', '@ems.service.contenttype', '@ems.service.user']
        tags:
          - { name: kernel.event_listener, event: EMS\CoreBundle\Event\RevisionFinalizeDraftEvent, method: finalizeDraftEvent, priority: 0 }
    ems.security.authenticator:
        class: EMS\CoreBundle\Security\Authenticator
        arguments: [ '@security.authentication.manager', '@doctrine']
    ems.form_submission:
        class: EMS\CoreBundle\Service\Form\Submission\FormSubmissionService
        arguments: ['@ems.repository.form_submission', '@twig', '@session', '@translator']
    ems.form_verification:
        class: EMS\CoreBundle\Service\Form\Verification\FormVerificationService
        arguments: ['@ems.repository.form_verification']


#### aliases
    EMS\CoreBundle\Elasticsearch\Bulker: '@ems.elasticsearch.bulker'
    EMS\CoreBundle\Elasticsearch\Indexer: '@ems.elasticsearch.indexer'
    EMS\CoreBundle\Service\FileService: '@ems.service.file'
    EMS\CoreBundle\Service\ElasticsearchService: '@ems.service.elasticsearch'
    EMS\CoreBundle\Service\AssetExtractorService: '@ems.service.asset_extractor'
    EMS\CoreBundle\Service\UserService: '@ems.service.user'
    EMS\CommonBundle\Helper\Text\Encoder: '@ems_common.text.encoder'
    EMS\CoreBundle\Service\SearchService: '@ems.service.search'
    EMS\CoreBundle\Service\PublishService: '@ems.service.publish'
    EMS\CoreBundle\Service\AggregateOptionService: '@ems.service.aggregate_option'
    EMS\CoreBundle\Service\Mapping: '@ems.service.mapping'
    EMS\CoreBundle\Service\SortOptionService: '@ems.service.sort_option'
    EMS\CoreBundle\Service\WysiwygProfileService: '@ems.service.wysiwyg_profile'
    EMS\CoreBundle\Service\SearchFieldOptionService: '@ems.service.search_field_option'
    EMS\CoreBundle\Service\WysiwygStylesSetService: '@ems.service.wysiwyg_styles_set'
    EMS\CoreBundle\Service\NotificationService: '@ems.service.notification'
    EMS\CoreBundle\Service\HelperService: '@ems.service.helper'
    EMS\CoreBundle\Form\Factory\ObjectChoiceListFactory: '@ems.form.factories.objectChoiceListFactory'
    EMS\CoreBundle\Core\Revision\Task\TaskManager: '@ems_core.core_revision_task.task_manager'


#### Will be mark as deprecated soon
    ems.service.data:
        alias: 'EMS\CoreBundle\Service\DataService'
        public: true