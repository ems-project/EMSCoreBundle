{% trans_default_domain 'EMSCoreBundle' %}
{# @var config      \EMS\CoreBundle\Core\Component\JsonMenuNested\Config\JsonMenuNestedConfig #}
{# @var column      \EMS\CoreBundle\Core\Component\JsonMenuNested\Config\JsonMenuNestedColumn #}
{# @var template    \EMS\CoreBundle\Core\Component\JsonMenuNested\Template\JsonMenuNestedTemplate #}
{# @var render      \EMS\CoreBundle\Core\Component\JsonMenuNested\JsonMenuNestedRenderContext #}
{# @var menu        \EMS\CommonBundle\Json\JsonMenuNested #}
{# @var item        \EMS\CommonBundle\Json\JsonMenuNested #}
{# @var node        \EMS\CoreBundle\Core\Component\JsonMenuNested\Config\JsonMenuNestedNode #}

{%- block jmn_layout_top -%}
    <div class="jmn-top">
        {{ template.block('jmn_title', _context)|raw }}
        {{ template.block('jmn_actions', _context)|raw }}
    </div>
{%- endblock jmn_layout_top -%}

{%- block jmn_layout_footer -%}{% endblock jmn_layout_footer %}

{%- block jmn_title -%}{%- endblock jmn_title -%}

{%- block jmn_actions -%}
    {{ template.block('jmn_button_add', _context)|raw }}
{%- endblock jmn_actions -%}

{%- block _jmn_columns  -%}
    <div class="jmn-header">
        {% for column in config.columns %}
            <div class="jmn-column {{ "jmn-column-#{column.name}" }}" style="{{ column.width ? "width:#{column.width}px;" }}" >
                {%- if template.hasBlock("jmn_column_#{column.name}") -%}
                    {{ template.block("jmn_column_#{column.name}", _context)|raw }}
                {%- endif -%}
            </div>
        {% endfor %}
    </div>
{%- endblock _jmn_columns -%}

{% block jmn_render %}
    {% with { 'menu': menu } %}{{ template.block('jmn_items', _context)|raw }}{% endwith %}
{% endblock jmn_render %}

{% block jmn_items %}
    {%- for item in menu.children -%}
        {%- set node = config.nodes.get(item) -%}
        {{ template.block('jmn_item', _context)|raw }}
    {%- endfor -%}
{% endblock jmn_items %}

{%- block jmn_item -%}
    {%- apply spaceless -%}
        <div class="{{ html_classes('jmn-node', { 'jmn-collapsible': item.hasChildren, 'jmn-node-active': item == render.activeItem }) }}" data-id="{{ item.id }}" data-type="{{ item.type }}">
            {{ template.block('jmn_item_row', _context)|raw }}
            {%- if node.leaf == false -%}
                <div id="{{ "children-#{item.id}" }}" class="jmn-children jmn-sortable" data-types="{{ config.nodes.types(item.type)|json_encode|e('html_attr') }}">
                    {% if item in render.loadParents %}
                        {% with { 'menu': item } %}{{ template.block('jmn_items', _context)|raw }}{% endwith %}
                    {% endif %}
                </div>
            {%- endif -%}
        </div>
    {%- endapply -%}
{%- endblock jmn_item -%}

{%- block jmn_item_row -%}
    <div class="jmn-row">
        {%- for column in config.columns -%}
            <div class="{{- "jmn-cell jmn-cell-#{column.name}" -}}" style="{{- column.width ? "width:#{column.width}px;" -}}" >
                {%- if template.hasBlock("jmn_cell_#{column.name}") -%}
                    {{- template.block("jmn_cell_#{column.name}", _context)|raw -}}
                {%- endif -%}
            </div>
        {%- endfor -%}
    </div>
{%- endblock jmn_item_row -%}

{%- block jmn_column_title -%}<span>Title</span>{%- endblock jmn_column_title -%}
{%- block jmn_column_structure -%}<span>Structure</span>{%- endblock jmn_column_structure -%}

{%- block jmn_cell_title -%}
    {% if item.hasChildren %}
        <button class="jmn-item-icon jmn-btn-collapse" aria-expanded="{{- item in render.loadParents ? 'true' : 'false' -}}"></button>
    {% endif %}
    {% if node.icon %}
        <div class="jmn-item-icon"><i class="{{ node.icon }}"></i></div>
    {% endif %}
    {{ template.block('jmn_item_title', _context)|raw }}
{%- endblock jmn_cell_title -%}

{%- block jmn_cell_structure -%}
    {{ template.block('jmn_button_add', _context)|raw }}
    {{ template.block('jmn_button_item_move', _context)|raw }}
    {{ template.block('jmn_button_item_more', _context)|raw }}
{%- endblock jmn_cell_structure -%}

{%- block jmn_item_title -%}
    <span>{{ item.label }}</span>
{%- endblock jmn_item_title -%}

{%- block jmn_button_item_edit -%}
    <button class="jmn-btn-edit" data-modal-size="md">{{ buttonLabel|default('Edit') }}</button>
{%- endblock jmn_button_item_edit -%}

{%- block jmn_button_item_delete -%}
    <button class="jmn-btn-delete">{{ buttonLabel|default('Delete') }}</button>
{%- endblock jmn_button_item_delete -%}

{%- block jmn_button_item_move -%}
    <button class="btn btn-sm btn-default jmn-btn-move">{{ buttonLabel|default('Move') }}</button>
{%- endblock jmn_button_item_move -%}

{%- block jmn_button_item_view -%}
    <button class="jmn-btn-view" data-modal-size="md">{{ buttonLabel|default('View') }}</button>
{%- endblock jmn_button_item_view -%}

{%- block jmn_button_item_add -%}
    <button class="jmn-btn-add" data-add="{{ addNode.id }}" data-modal-size="md">
        {% if addNode.icon %}<i class="{{ addNode.icon }}"></i>{% endif %}
        {{ buttonLabel|default("New #{addNode.type}") }}
    </button>
{%- endblock jmn_button_item_add -%}

{%- block jmn_button_item_more -%}
    {% set menuMore = template.block('jmn_button_item_more_menu', _context)|raw  %}
    {% if menuMore|length > 0 %}
        <div class="btn-group btn-group-sm">
            <button type="button" class="btn btn-sm btn-default dropdown-toggle jmn-dropdown-more" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
            <ul class="dropdown-menu pull-right">
                {{ menuMore|raw }}
            </ul>
        </div>
    {% endif %}
{%- endblock jmn_button_item_more -%}

{%- block jmn_button_item_more_menu -%}
    <li>{{ template.block('jmn_button_item_view', _context)|raw }}</li>
    <li>{{ template.block('jmn_button_item_edit', _context)|raw }}</li>
    <li>{{ template.block('jmn_button_item_delete', _context)|raw }}</li>
{%- endblock jmn_button_item_more_menu -%}

{%- block jmn_button_add -%}
    {% set node = node|default(config.nodes.root) %}
    {% set addNodes = config.nodes.children(node) %}
    {% set addMenu = template.block('jmn_button_add_menu', _context)|raw %}

    {% if addNodes|length > 0 or addMenu|length > 0 %}
        <div class="btn-group btn-group-sm">
            <button type="button" class="btn btn-sm btn-default dropdown-toggle jmn-dropdown jmn-dropdown-add" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                {{ buttonLabel|default('Add') }}
            </button>
            <ul class="dropdown-menu pull-right">
                {{ addMenu|raw }}
            </ul>
        </div>
    {% endif %}
{%- endblock jmn_button_add -%}

{%- block jmn_button_add_menu -%}
    {% for addNode in addNodes|default([]) %}
        <li>{{ template.block('jmn_button_item_add', _context)|raw }}</li>
    {% endfor %}
{%- endblock jmn_button_add_menu -%}

{%- block jmn_modal_title -%}
    {% set modalTitle = modalTitle|default("#{action|capitalize} #{node.type|default('')|capitalize}") %}
    {% if node.icon|default(false) %}<i class="{{ node.icon }}"></i>&nbsp;{% endif %}
    {{ modalTitle }}
{%- endblock jmn_modal_title -%}

{%- block jmn_modal_body -%}
    {% if action == 'view' %}
        {{ template.block('jmn_modal_view', _context)|raw }}
    {% elseif form is defined %}
        {{ form_start(form) }}
        {{ form_widget(form.data) }}
        {% if form._item_hash is defined %}{{ form_widget(form._item_hash) }}{% endif %}
        {{ form_end(form) }}
    {% endif %}
{%- endblock jmn_modal_body -%}

{%- block jmn_modal_footer -%}
    <div class="pull-right">
        {% if form is defined  %}
            <button id="ajax-modal-submit" class="btn btn-sm btn-primary"><i class="fa fa-save"></i>&nbsp;Save</button>
        {% endif %}
        <button type="button" class="btn btn-sm btn-default" data-dismiss="modal">Cancel</button>
    </div>
{%- endblock jmn_modal_footer -%}

{%- block jmn_modal_view -%}
    {%- if dataFields -%}
        {%- import "@EMSCore/macros/data-field-type.html.twig" as macros -%}
        {{ macros.renderDataField(dataFields, rawData, false, []) }}
    {%- else -%}
        <p class="text-red">{{ 'view.data.json-menu-nested-json-preview.field-type-not-found'|trans }}</p>
        <pre class="ems-code-editor" data-language="ace/mode/json" data-them="ace/theme/chrome">
        {{- rawData|json_encode(constant('JSON_PRETTY_PRINT')) -}}
    </pre>
    {%- endif -%}
{%- endblock jmn_modal_view -%}
