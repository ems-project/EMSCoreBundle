{% trans_default_domain 'EMSCoreBundle' %}{#
  Parameters:
    * currentFilters (array) : associative array that contains the current route-arguments
    * currentPage (int) : the current page you are in
    * paginationPath (string) : the route name to use for links
    * showAlwaysFirstAndLast (bool) : Always show first and last link (just disabled)
    * lastPage (int) : represents the total number of existing pages
#}
{% apply spaceless %}

	{% if paging is defined %}
		{% set currentFilters = app.request.query %}
		{% set currentPage = paging.page %}
		{% set lastPage = paging.lastPage %}
		{% set paginationPath = paging.paginationPath %}
	{%  endif %}


    {% if lastPage > 1 %}

        {# the number of first and last pages to be displayed #}
        {% set extremePagesLimit = 3 %}
        {% if not pageParameter is defined %}
        	{% set pageParameter = 'page' %}
        {% endif %}

        {# the number of pages that are displayed around the active page #}
        {% set nearbyPagesLimit = 2 %}
			<ul class="pagination pagination-sm no-margin pull-right">
			       
            {% if currentPage > 1 %}
                <li><a href="{{ path(paginationPath, currentFilters|merge({(pageParameter): currentPage-1})) }}">«</a></li>

                {% for i in range(1, extremePagesLimit)|filter(i => i < (currentPage - nearbyPagesLimit)) %}
                    <li><a href="{{ path(paginationPath, currentFilters|merge({(pageParameter): i})) }}">{{ i }}</a></li>
                {% endfor %}

                {% if extremePagesLimit + 1 < currentPage - nearbyPagesLimit %}
                    <li><span class="sep-dots">...</span></li>
                {% endif %}

                {% for i in range(currentPage-nearbyPagesLimit, currentPage-1)|filter(i => i > 0) %}
                    <li><a href="{{ path(paginationPath, currentFilters|merge({(pageParameter): i})) }}">{{ i }}</a></li>
                {% endfor %}
            {% elseif showAlwaysFirstAndLast %}
                <li class="disabled">«</li>
            {% endif %}

            <li class="active"><a href="{{ path(paginationPath, currentFilters|merge({ (pageParameter): currentPage })) }}"
               >{{ currentPage }}</a></li>

            {% if currentPage < lastPage %}
                {% for i in range(currentPage+1, currentPage + nearbyPagesLimit)|filter(i => i <= lastPage) %}
                    <li><a href="{{ path(paginationPath, currentFilters|merge({page: i})) }}">{{ i }}</a></li>
                {% endfor %}

                {% if  (lastPage - extremePagesLimit) > (currentPage + nearbyPagesLimit) %}
                    <li><span class="sep-dots">...</span></li>
                {% endif %}

                {% for i in range(lastPage - extremePagesLimit+1, lastPage)|filter(i => i > (currentPage + nearbyPagesLimit)) %}
                    <li><a href="{{ path(paginationPath, currentFilters|merge({(pageParameter): i})) }}">{{ i }}</a></li>
                {% endfor %}

                <li><a href="{{ path(paginationPath, currentFilters|merge({(pageParameter): currentPage+1})) }}">»</a></li>
            {% elseif showAlwaysFirstAndLast %}
                <li class="disabled">»</li>
            {% endif %}
        </ul>
    {% endif %}
{% endapply %}